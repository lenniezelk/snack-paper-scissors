local global = require("main.global")

function rive_event_handler(self, message_id, message)
	if message.name == 'Replay Clicked' then
		sound.play("#btn-click")
		timer.delay(0.3, false, function()
			global.reset_game_state()
			global.update_state({ level = 'results' })
			msg.post("loader:/go#loader", "go_to_round")
		end)
	elseif message.name == 'Main Menu Clicked' then
		sound.play("#btn-click")
		timer.delay(0.3, false, function()
			global.reset_game_state()
			global.update_state({ level = 'results' })
			msg.post("loader:/go#loader", "go_to_main_menu")
		end)
	end
end

local function get_text_for_result()
	if global.game_state.result == 'WON' then
		return "You Won!"
	elseif global.game_state.result == 'DRAW' then
		return "It's a Draw!"
	else
		return "You Lost!"
	end
end

function init(self)
	global.set_background_color("FFEFC3")
	msg.post(".", "acquire_input_focus")
	global.update_state({ level = 'results' })
	rive.play_state_machine("#rivemodel", "State Machine 1", nil, rive_event_handler)
	self.handle = rive.databind.create_view_model_instance_runtime("#rivemodel", "Result")
	rive.databind.set_view_model_instance_runtime("#rivemodel", self.handle)
	rive.databind.set_properties('#rivemodel', self.handle, {
		['text'] = get_text_for_result(),
		["main menu button/text"] = "Main Menu",
		["replay button/text"] = "Play Again",
	})
	if global.game_state.result == 'WON' then
		sound.play("#results-won")
	else
		sound.play("#results-lost")
	end
end

function on_input(self, action_id, action)
	if not action_id or action_id == hash("touch") then
		if action.pressed then
			rive.pointer_down("#rivemodel", action.x, action.y)
		elseif action.released then
			rive.pointer_up("#rivemodel", action.x, action.y)
		else
			rive.pointer_move("#rivemodel", action.x, action.y)
		end
	end
end
